{
  "name": "opencollective-api",
  "version": "2.0.335",
  "description": "Open Collective API",
  "author": "@philmod @arnaudbenard @xdamman @asood123",
  "main": "server/index.js",
  "engines": {
    "node": "11.8.0",
    "npm": "6.5.0"
  },
  "dependencies": {
    "@babel/core": "7.4.0",
    "@babel/node": "7.2.2",
    "@babel/plugin-proposal-class-properties": "7.4.0",
    "@babel/plugin-transform-async-to-generator": "7.4.0",
    "@babel/preset-env": "7.4.2",
    "@octokit/rest": "16.23.0",
    "@opencollective/taxes": "2.3.0",
    "algoliasearch": "3.32.1",
    "amqplib": "0.5.3",
    "apollo-errors": "1.9.0",
    "apollo-server-express": "2.4.8",
    "argparse": "1.0.10",
    "async": "0.9.2",
    "axios": "0.18.0",
    "babel-plugin-add-module-exports": "1.0.0",
    "babel-plugin-lodash": "3.3.4",
    "base64url": "3.0.1",
    "bcrypt": "3.0.5",
    "bluebird": "3.5.3",
    "body-parser": "1.18.3",
    "child-process-promise": "2.2.1",
    "clearbit": "1.3.4",
    "cloudflare": "2.4.1",
    "cloudflare-ip": "0.0.7",
    "config": "3.0.1",
    "connect-redis": "3.4.1",
    "cookie-parser": "1.4.4",
    "cors": "2.8.5",
    "cucumber": "5.1.0",
    "dataloader": "1.4.0",
    "dataloader-sequelize": "1.7.10",
    "debug": "4.1.1",
    "deepmerge": "3.2.0",
    "dotenv": "7.0.0",
    "errorhandler": "1.5.0",
    "express": "4.16.4",
    "express-graphql": "0.7.1",
    "express-server-status": "1.0.3",
    "express-session": "1.15.6",
    "flat": "4.1.0",
    "forest-express-sequelize": "2.17.2",
    "fs-extra": "7.0.1",
    "graphql": "0.13.2",
    "graphql-iso-date": "3.6.1",
    "graphql-type-json": "0.2.2",
    "handlebars": "4.1.1",
    "hashids": "1.2.2",
    "he": "1.2.0",
    "helmet": "3.16.0",
    "html-pdf": "2.2.0",
    "ics": "2.13.2",
    "intl-messageformat": "2.2.0",
    "isomorphic-fetch": "2.2.1",
    "joi": "14.3.1",
    "json2csv": "4.4.1",
    "jsonwebtoken": "5.7.0",
    "juice": "5.2.0",
    "knox": "github:automattic/knox#278337d7673341658efcc81e631c3f63fa53d374",
    "limax": "1.7.0",
    "lodash": "4.17.11",
    "lru-cache": "5.1.1",
    "md5": "2.2.1",
    "memjs": "1.2.0",
    "merge-options": "1.0.1",
    "mime": "2.4.0",
    "moment": "2.24.0",
    "moment-timezone": "0.5.23",
    "morgan": "1.9.1",
    "multer": "1.4.1",
    "node-fetch": "2.3.0",
    "node-slack": "0.0.7",
    "node-slug": "0.0.2",
    "nodemailer": "6.0.0",
    "p-queue": "4.0.0",
    "passport": "0.4.0",
    "passport-github": "1.1.0",
    "passport-meetup-oauth2": "0.0.2",
    "passport-twitter": "1.0.4",
    "paypal-adaptive": "0.4.2",
    "paypal-rest-sdk": "1.8.1",
    "pg": "7.9.0",
    "pg-connection-string": "2.0.0",
    "pg-format": "1.0.4",
    "pg-hstore": "2.3.2",
    "prepend-http": "2.0.0",
    "redis": "2.8.0",
    "request-as-curl": "0.1.0",
    "request-promise": "4.2.3",
    "sanitize-html": "1.20.0",
    "sequelize": "4.43.0",
    "sequelize-cli": "4.0.0",
    "sequelize-temporal": "1.0.6",
    "showdown": "1.9.0",
    "stripe": "6.28.0",
    "twitter": "1.7.1",
    "unicode": "11.0.1",
    "uuid": "3.3.2",
    "validator": "10.11.0",
    "winston": "3.2.1"
  },
  "devDependencies": {
    "@babel/cli": "7.2.3",
    "@babel/polyfill": "7.4.0",
    "@babel/register": "7.4.0",
    "babel-eslint": "^10.0.1",
    "babel-plugin-istanbul": "^5.1.0",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "chai-jest-snapshot": "^2.0.0",
    "chance": "^1.0.18",
    "coveralls": "^3.0.2",
    "eslint": "^5.12.1",
    "eslint-config-opencollective": "^1.5.0",
    "eslint-plugin-babel": "^5.3.0",
    "eslint-plugin-import": "^2.16.0",
    "eslint-plugin-mocha": "5.3.0",
    "eslint-plugin-node": "^8.0.1",
    "eslint-plugin-react": "^7.12.4",
    "graphiql": "^0.13.0",
    "husky": "^1.3.1",
    "jsdoc": "^3.5.5",
    "jsdoc-simple-theme": "^1.2.6",
    "lint-staged": "^8.1.1",
    "mocha": "^6.0.2",
    "mocha-circleci-reporter": "^0.0.3",
    "mocha-lcov-reporter": "^1.3.0",
    "nock": "^10.0.6",
    "nodemon": "^1.18.9",
    "nyc": "^13.1.0",
    "prettier": "1.16.3",
    "prompts": "^2.0.1",
    "react": "^16.7.0",
    "react-dom": "^16.7.0",
    "sinon": "^7.2.3",
    "supertest": "^4.0.2",
    "supertest-as-promised": "^4.0.2"
  },
  "scripts": {
    "start": "node ./dist/index.js",
    "doc:gen": "jsdoc --configure .jsdoc.json --verbose",
    "predocker:dev": "npm install && npm run db:setup && babel-node ./scripts/db_restore.js opencollective_dvl",
    "docker:dev": "npm run dev",
    "build": "npm run build:clean && npm run build:updates && npm run build:server",
    "build:clean": "rm -rf dist && mkdir dist",
    "build:updates": "npm --prefix node_modules/cloudflare-ip run update-list",
    "build:server": "babel server -d ./dist",
    "dev": "nodemon server/index.js -x babel-node . -e js,hbs",
    "hint": "npm run lint:quiet",
    "lint": "eslint .",
    "lint:fix": "npm run lint -- --fix",
    "lint:quiet": "npm run lint -- --quiet",
    "prettier": "prettier \"**/*.@(js|json|md)\" --ignore-path .eslintignore",
    "prettier:write": "npm run prettier -- --write",
    "prettier:check": "npm run prettier -- --list-different",
    "pretest": "npm run lint:quiet && npm run prettier:check",
    "test": "TZ=UTC nyc npm run test:dev && npm run coverage",
    "test:server": "./scripts/db_restore.sh -d opencollective_dvl -f test/dbdumps/opencollective_dvl.pgsql && PG_DATABASE=opencollective_dvl npm run dev",
    "test:dev": "npm run test:unit:dev && npm run test:bdd:dev",
    "test:unit:dev": "mocha --reporter-options mochaFile=$(bash scripts/test_output_dir.sh junit)/junit.xml",
    "test:unit": "nyc mocha --reporter-options mochaFile=$(bash scripts/test_output_dir.sh junit)/junit.xml",
    "test:bdd:dev": "cucumber-js --require-module @babel/register --require-module @babel/polyfill --backtrace --order random ./test/features",
    "test:bdd": "nyc cucumber-js --require-module @babel/register --require-module @babel/polyfill --backtrace --order random ./test/features",
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "db:clean": "babel-node ./scripts/replace_stripe_accounts.js",
    "db:setup": "babel-node ./scripts/db_setup.js",
    "db:migrate": "./scripts/sequelize.sh db:migrate",
    "db:migrate:undo": "./scripts/sequelize.sh db:migrate:undo",
    "db:migration:create": "./scripts/sequelize.sh migration:create",
    "db:seed": "./scripts/sequelize.sh db:seed",
    "db:copy:prod": "./scripts/db_copy_to_localhost.sh prod && PG_DATABASE=opencollective_prod_snapshot npm run db:sanitize",
    "db:copy:staging": "./scripts/db_copy_to_localhost.sh staging",
    "db:copy:prod:staging": "./scripts/db_copy_prod_to_staging.sh opencollective-staging-api && heroku run npm run db:sanitize --app opencollective-staging-api",
    "db:copy:prod:staging-dev": "./scripts/db_copy_prod_to_staging.sh $DEV && heroku run npm run db:sanitize --app $DEV",
    "db:sanitize": "babel-node scripts/replace_stripe_accounts",
    "db:reset": "babel-node scripts/reset",
    "postdb:migrate:dev": "npm run db:clean",
    "postinstall": "./scripts/postinstall.sh",
    "git:clean": "./scripts/git_clean.sh",
    "deploy:staging": "./scripts/pre-deploy.sh staging && bash -x scripts/deploy.sh staging",
    "deploy:production": "./scripts/pre-deploy.sh production && bash -x scripts/deploy.sh production",
    "report": "node scripts/send_email_report_cli.js",
    "report:weekly": "node cron/weekly/slack-report.js",
    "report:monthly": "babel-node cron/monthly/slack-report.js",
    "check:transactions": "node scripts/check_transactions_on_stripe",
    "script": "node scripts/execute",
    "cron:10mn": "PG_MAX_CONNECTIONS=1 ./scripts/cron.sh 10mn",
    "cron:hourly": "PG_MAX_CONNECTIONS=1 ./scripts/cron.sh hourly",
    "cron:daily": "PG_MAX_CONNECTIONS=1 ./scripts/cron.sh daily",
    "cron:weekly": "PG_MAX_CONNECTIONS=1 ./scripts/cron.sh weekly",
    "cron:monthly": "PG_MAX_CONNECTIONS=1 ./scripts/cron.sh monthly",
    "cron:yearly": "PG_MAX_CONNECTIONS=1 ./scripts/cron.sh yearly",
    "export:csv": "babel-node scripts/monthly_data_exports.js",
    "compile:email": "babel-node scripts/compile-email.js",
    "compile:email:watch": "./scripts/watch_email_template.sh",
    "maildev": "npx maildev",
    "refund-transactions": "babel-node ./scripts/add_refund_transactions_from_collective.js"
  },
  "nyc": {
    "reporter": [
      "lcov",
      "text"
    ],
    "cache": true
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,json,md}": [
      "prettier --write",
      "git add"
    ]
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/opencollective/opencollective-api.git"
  },
  "heroku-run-build-script": true
}
